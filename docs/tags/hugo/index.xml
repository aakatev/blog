<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Artem&#39;s Digital Garden</title>
    <link>/tags/hugo/</link>
    <description>Recent content in hugo on Artem&#39;s Digital Garden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Sep 2020 10:42:08 -1500</lastBuildDate><atom:link href="/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Learn Hugo] Project Structure</title>
      <link>/posts/learn-hugo/project-structure/</link>
      <pubDate>Sat, 05 Sep 2020 10:42:08 -1500</pubDate>
      
      <guid>/posts/learn-hugo/project-structure/</guid>
      <description>Last time we talked about the difference between static and dynamic websites, and created a Hello World project using the Hugo CLI. This post will cover the project&amp;rsquo;s folder structure in more details.
Here is our hello-world project:
├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts │ └── index.html ├── resources │ └── _gen │ ├── assets │ └── images ├── static └── themes First of all, you have probably noticed that running the hugo server command created resources folder.</description>
    </item>
    
    <item>
      <title>[Learn Hugo] Getting Started with Static Websites</title>
      <link>/posts/learn-hugo/getting-started/</link>
      <pubDate>Sat, 05 Sep 2020 10:42:08 -0900</pubDate>
      
      <guid>/posts/learn-hugo/getting-started/</guid>
      <description>I have published a number of posts featuring Hugo. They got the least number of views and responses I have ever had on dev.to. Considering this fact, I don&amp;rsquo;t know why I decided it would be a good idea to have the whole series of articles dedicated to &amp;ldquo;the world’s fastest framework for building websites&amp;rdquo;.
The format for the series is going to be beginner friendly. Each post covers a single feature, or some subset of a feature.</description>
    </item>
    
    <item>
      <title>BigBlueButton JS</title>
      <link>/projects/bigbluebutton-js/</link>
      <pubDate>Sat, 05 Sep 2020 10:42:08 -0900</pubDate>
      
      <guid>/projects/bigbluebutton-js/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Add a Video to Your Hugo Website</title>
      <link>/posts/add-a-video-to-your-hugo-website/</link>
      <pubDate>Sat, 05 Sep 2020 10:42:08 -0700</pubDate>
      
      <guid>/posts/add-a-video-to-your-hugo-website/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is easy to get started, and has a fair number of customization available out of the box. It is a great choice for content creators who don&amp;rsquo;t want to spend a lot of time on HTML and CSS, but would rather focus on delivering their product to the audience.
Video is one of the most common forms of the media content.</description>
    </item>
    
    <item>
      <title>Three JS Webpack Boilerplate</title>
      <link>/projects/three-js-webpack/</link>
      <pubDate>Tue, 01 Sep 2020 10:42:08 -0900</pubDate>
      
      <guid>/projects/three-js-webpack/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Implementing CD Pipeline for Static Website</title>
      <link>/posts/hugo-cd-pipeline/</link>
      <pubDate>Sun, 05 Jul 2020 10:42:08 -0700</pubDate>
      
      <guid>/posts/hugo-cd-pipeline/</guid>
      <description>One day I decided to create a backup of all my dev.to posts. Programmers are lazy, so I wanted to do as little work as possible, and wanted the final result to look as nice as possible (or at least nicer than Markdown reader on GitHub).
Final requirements for the project were the following:
 Fully static (cheap/free to host) Markdown support (copy and paste existing material) Continuous deployment (automation is good) Easy to maintain (easy is good)  Based on the requirements, I decided on this simple workflow:</description>
    </item>
    
  </channel>
</rss>
