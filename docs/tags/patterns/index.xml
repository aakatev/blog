<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>patterns on Artem&#39;s Digital Garden</title>
    <link>/tags/patterns/</link>
    <description>Recent content in patterns on Artem&#39;s Digital Garden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Apr 2020 08:42:08 -0700</lastBuildDate><atom:link href="/tags/patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Singleton Pattern in JavaScript</title>
      <link>/posts/javascript-singleton/</link>
      <pubDate>Sun, 12 Apr 2020 08:42:08 -0700</pubDate>
      
      <guid>/posts/javascript-singleton/</guid>
      <description>If you come from Java or C++ background, you are probably used to classic OOP model, and it is hard to imagine how you can implement singleton in JavaScript. The answer to this question is to use closures!
It is the same idea as module patterns, and comes from functional programming. The essence of closure, is creating an inner function in a scope of an outer function. If you know JS, you know that inner function has access to data members that are in the scope of the outer function.</description>
    </item>
    
  </channel>
</rss>
